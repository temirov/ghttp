name: Docker Image (ghttp â†’ GHCR)

on:
  workflow_dispatch: {}
  push:
    branches: 
      - master
    tags:
      - "v*.*.*"

env:
  registry: ghcr.io
  default_platforms: linux/amd64,linux/arm64

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive tags
        id: meta
        run: |
          set -euo pipefail
          registry="${{ env.registry }}"
          image="${{ toLower(github.repository) }}"
          sha_tag="${{ github.sha }}"
          tags="${registry}/${image}:${sha_tag}"

          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            tags="${tags},${registry}/${image}:latest"
          fi

          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            version="${GITHUB_REF#refs/tags/}"
            tags="${tags},${registry}/${image}:${version}"
            major_minor="${version%.*}"
            major="${version%%.*}"
            tags="${tags},${registry}/${image}:${major_minor},${registry}/${image}:${major}"
          fi

          echo "tags=${tags}" >> "${GITHUB_OUTPUT}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          provenance: false
          sbom: false
          platforms: ${{ env.default_platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-push-windows:
    runs-on: windows-latest
    needs:
      - build-and-push
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive tags (Windows)
        id: meta
        shell: pwsh
        run: |
          $registry = "${{ env.registry }}"
          $image = "${{ toLower(github.repository) }}-windows"
          $shaTag = "${{ github.sha }}"
          $tags = @("$registry/$image:$shaTag")

          if ("${{ github.ref }}" -eq "refs/heads/master") {
            $tags += "$registry/$image:latest"
          }

          if ("${{ github.ref }}".StartsWith("refs/tags/v")) {
            $version = "${{ github.ref }}" -replace "^refs/tags/", ""
            $tags += "$registry/$image:$version"

            $segments = $version -split '\.'
            if ($segments.Length -ge 2) {
              $majorMinor = "$($segments[0]).$($segments[1])"
              $tags += "$registry/$image:$majorMinor"
            }
            if ($segments.Length -ge 1) {
              $major = $segments[0]
              $tags += "$registry/$image:$major"
            }
          }

          $joined = $tags -join ','
          "tags=$joined" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Windows image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile.windows
          push: true
          provenance: false
          sbom: false
          platforms: windows/amd64
          tags: ${{ steps.meta.outputs.tags }}
