name: Docker Image (ghttp â†’ GHCR)

on:
  workflow_dispatch: {}
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

env:
  registry: ghcr.io
  default_platforms: linux/amd64,linux/arm64

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Lowercase image name
        id: repo
        run: echo "name=${GITHUB_REPOSITORY,,}" >> "$GITHUB_OUTPUT"

      - name: Derive tags
        id: meta
        run: |
          set -euo pipefail
          registry="${{ env.registry }}"
          image="${{ steps.repo.outputs.name }}"
          sha_tag="${{ github.sha }}"
          tags="${registry}/${image}:${sha_tag}"

          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            tags="${tags},${registry}/${image}:latest"
          fi

          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            version="${GITHUB_REF#refs/tags/}"
            tags="${tags},${registry}/${image}:${version}"
            major_minor="${version%.*}"
            major="${version%%.*}"
            tags="${tags},${registry}/${image}:${major_minor},${registry}/${image}:${major}"
          fi

          echo "tags=${tags}" >> "${GITHUB_OUTPUT}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          provenance: false
          sbom: false
          platforms: ${{ env.default_platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
